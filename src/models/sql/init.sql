DROP DATABASE "slap_game";
CREATE DATABASE "slap_game";

CREATE TYPE "card_enum_color" AS ENUM (
    'red',
    'black'
);

CREATE TYPE "card_enum_suit_en" AS ENUM (
    'diamonds',
    'hearts',
    'spades',
    'clubs'
);

CREATE TYPE "card_enum_suit_fr" AS ENUM (
    'carreaux',
    'coeurs',
    'piques',
    'trÃ¨fles'
);

CREATE TYPE "card_enum_type" AS ENUM (
    'number',
    'face',
    'ace',
    'joker'
);

CREATE TYPE "card_enum_value_en" AS ENUM (
    'ace',
    'two',
    'three',
    'four',
    'five',
    'six',
    'seven',
    'eight',
    'nine',
    'ten',
    'jack',
    'queen',
    'king',
    'joker'
);

CREATE TYPE "card_enum_value_fr" AS ENUM (
    'as',
    'un',
    'deux',
    'trois',
    'quatre',
    'cinq',
    'six',
    'sept',
    'huit',
    'neuf',
    'dix',
    'valet',
    'dame',
    'roi',
    'joker'
);

CREATE TABLE "card_decks" (
    "id" smallint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name_fr" varchar(100) NOT NULL UNIQUE,
    "name_en" varchar(100) NOT NULL UNIQUE,
    "description_fr" "text" NOT NULL,
    "description_en" "text" NOT NULL
);

CREATE TABLE "cards" (
    "id" smallint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "value_int" smallint,
    "value_text_fr" "card_enum_value_fr" NOT NULL,
    "value_text_en" "card_enum_value_en" NOT NULL,
    "value_symbol_fr" character(2),
    "value_symbol_en" character(2),
    "suit_text_fr" "card_enum_suit_fr",
    "suit_text_en" "card_enum_suit_en",
    "suit_symbol" character(1),
    "suit_color" "card_enum_color" NOT NULL,
    "type" "card_enum_type" NOT NULL,
    CONSTRAINT "card_id_range" CHECK ((("id" >= 1) AND ("id" <= 54))),
    CONSTRAINT "card_value_int" CHECK ((("value_int" >= 1) AND ("value_int" <= 13)))
);

CREATE TABLE "cards_card_decks" (
    "card_id" smallint NOT NULL,
    "card_deck_id" smallint NOT NULL,
	FOREIGN KEY ("card_deck_id") REFERENCES "card_decks"("id") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY ("card_id") REFERENCES "cards"("id") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY ("card_id", "card_deck_id")
);

CREATE TABLE "combinations" (
    "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name_fr" varchar(100) NOT NULL,
    "name_en" varchar(100) NOT NULL,
    "description_fr" "text" NOT NULL,
    "description_en" "text" NOT NULL
);

CREATE TABLE "games_combinations" (
    "game_id" integer NOT NULL,
    "combination_id" integer NOT NULL,
	FOREIGN KEY ("game_id") REFERENCES "games"("id") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY ("combination_id") REFERENCES "combinations"("id") ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY ("game_id", "combination_id")
);

CREATE VIEW "combinations_vw" AS
 SELECT "games_combinations"."game_id",
    "array_agg"("games_combinations"."combination_id") AS "combinations"
   FROM "games_combinations"
  GROUP BY "games_combinations"."game_id"
  ORDER BY "games_combinations"."game_id";

CREATE TABLE "games" (
    "id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    "host_id" integer NOT NULL,
    "date" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "card_deck_id" integer NOT NULL,
    "penalty_price" smallint DEFAULT 3 NOT NULL,
    "strike_number" smallint DEFAULT 3 NOT NULL,
    "password" "text",
    "is_private" boolean DEFAULT false NOT NULL,
    "is_started" boolean DEFAULT false NOT NULL,
	FOREIGN KEY ("card_deck_id") REFERENCES "card_decks"("id") ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY ("host_id") REFERENCES "users"("id") ON UPDATE CASCADE ON DELETE CASCADE	
);

CREATE VIEW "games_vw" AS
 SELECT "games"."id",
    "games"."host_id" AS "hostId",
    "games"."date",
    "games"."card_deck_id" AS "cardDeckId",
    "games"."penalty_price" AS "penaltyPrice",
    "games"."strike_number" AS "strikeNumber",
    "games"."is_private" AS "isPrivate",
    "games"."password",
    "games"."is_started" AS "isStarted",
    COALESCE("c"."combinations", ARRAY[]::integer[]) AS "combinations"
   FROM ("games"
     LEFT JOIN "combinations_vw" "c" ON (("c"."game_id" = "games"."id")));

CREATE TABLE "player_decks" (
    "user_id" integer,
    "game_id" integer NOT NULL,
    "card_id" smallint NOT NULL,
    "card_position" smallint NOT NULL,
	FOREIGN KEY ("user_id") REFERENCES "users"("id") ON UPDATE CASCADE ON DELETE CASCADE,	
	FOREIGN KEY ("game_id") REFERENCES "games"("id") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY ("card_id") REFERENCES "cards"("id") ON UPDATE CASCADE ON DELETE CASCADE,
	UNIQUE ("game_id", "user_id", "card_position"),
	PRIMARY KEY ("game_id", "card_id")
);

CREATE TABLE "strikes" (
    "user_id" integer NOT NULL,
    "game_id" integer NOT NULL,
    "nb_of_strikes" smallint DEFAULT 0 NOT NULL,
	FOREIGN KEY ("user_id") REFERENCES "users"("id") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY ("game_id") REFERENCES "games"("id") ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY ("user_id", "game_id")
);

CREATE TABLE "tokens" (
    "id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    "token" "text" NOT NULL UNIQUE,
    "expires_at" timestamp without time zone NOT NULL,
    "usable" boolean DEFAULT true NOT NULL,
    "user_id" integer NOT NULL
	FOREIGN KEY ("user_id") REFERENCES "users"("id") ON UPDATE CASCADE ON DELETE CASCADE;
);

CREATE TABLE "users" (
    "id" integer PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    "username" varchar(100) NOT NULL,
    "email" varchar(255) NOT NULL UNIQUE,
    "password" "text" NOT NULL
);
